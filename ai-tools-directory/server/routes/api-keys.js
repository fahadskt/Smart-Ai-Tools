import express from 'express';
import { auth } from '../middleware/auth.js';
import ApiKey from '../models/ApiKey.js';

const router = express.Router();

// Get all API keys for the authenticated user
router.get('/', auth, async (req, res) => {
  try {
    const apiKeys = await ApiKey.find({ user: req.userId })
      .sort({ createdAt: -1 });

    res.json(apiKeys);
  } catch (error) {
    console.error('Error fetching API keys:', error);
    res.status(500).json({ message: 'Server error' });
  }
});

// Create a new API key
router.post('/', auth, async (req, res) => {
  try {
    const { name } = req.body;

    if (!name) {
      return res.status(400).json({ message: 'Name is required' });
    }

    const apiKey = new ApiKey({
      user: req.userId,
      name,
      token: '' // Will be generated by the pre-save hook
    });

    await apiKey.save();
    res.status(201).json(apiKey);
  } catch (error) {
    console.error('Error creating API key:', error);
    res.status(500).json({ message: 'Server error' });
  }
});

// Delete an API key
router.delete('/:id', auth, async (req, res) => {
  try {
    const apiKey = await ApiKey.findOneAndDelete({
      _id: req.params.id,
      user: req.userId
    });

    if (!apiKey) {
      return res.status(404).json({ message: 'API key not found' });
    }

    res.json({ message: 'API key deleted successfully' });
  } catch (error) {
    console.error('Error deleting API key:', error);
    res.status(500).json({ message: 'Server error' });
  }
});

// Validate an API key (for use in API endpoints)
export const validateApiKey = async (req, res, next) => {
  try {
    const token = req.header('X-API-Key');
    
    if (!token) {
      return res.status(401).json({ message: 'API key required' });
    }

    const apiKey = await ApiKey.findOne({ token }).populate('user');
    
    if (!apiKey) {
      return res.status(401).json({ message: 'Invalid API key' });
    }

    // Update last used timestamp
    apiKey.lastUsed = new Date();
    await apiKey.save();

    // Add user info to request
    req.user = apiKey.user;
    next();
  } catch (error) {
    console.error('Error validating API key:', error);
    res.status(500).json({ message: 'Server error' });
  }
};

export default router;
