<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head.ejs') %>
    <title>Prompts Manager - Admin Portal</title>
</head>
<body>
    <%- include('./partials/navbar.ejs') %>

    <div class="container-fluid">
        <div class="row">
            <%- include('./partials/sidebar.ejs', { active: 'prompts-manager' }) %>

            <main class="content">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
                    <h1 class="h2">Prompts Manager</h1>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addPromptModal">
                        <i class="bi bi-plus-circle me-2"></i>Add New Prompt
                    </button>
                </div>

                <% if (typeof error !== 'undefined') { %>
                    <div class="alert alert-danger" role="alert">
                        <%= error %>
                    </div>
                <% } %>

                <!-- Search Bar -->
                <div class="card mb-4">
                    <div class="card-body">
                        <form class="row g-3" method="GET">
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="search" name="search" 
                                    placeholder="Search prompts..." value="<%= search %>">
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="bi bi-search me-2"></i>Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Prompts Table -->
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        <th>Description</th>
                                        <th>Type</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% prompts.forEach(prompt => { %>
                                        <tr>
                                            <td><%= prompt.title %></td>
                                            <td><%= prompt.description.substring(0, 100) %>...</td>
                                            <td><%= prompt.type %></td>
                                            <td>
                                                <span class="badge bg-<%= prompt.status === 'active' ? 'success' : 'warning' %>">
                                                    <%= prompt.status %>
                                                </span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-primary me-2" 
                                                    onclick="editPrompt('<%= prompt._id %>')">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger"
                                                    onclick="deletePrompt('<%= prompt._id %>')">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    <% }); %>
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        <% if (pagination.pages > 1) { %>
                            <nav aria-label="Page navigation" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item <%= pagination.current === 1 ? 'disabled' : '' %>">
                                        <a class="page-link" href="?page=<%= pagination.current - 1 %>&search=<%= search %>">Previous</a>
                                    </li>
                                    <% for(let i = 1; i <= pagination.pages; i++) { %>
                                        <li class="page-item <%= pagination.current === i ? 'active' : '' %>">
                                            <a class="page-link" href="?page=<%= i %>&search=<%= search %>"><%= i %></a>
                                        </li>
                                    <% } %>
                                    <li class="page-item <%= pagination.current === pagination.pages ? 'disabled' : '' %>">
                                        <a class="page-link" href="?page=<%= pagination.current + 1 %>&search=<%= search %>">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        <% } %>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Add Prompt Modal -->
    <div class="modal fade" id="addPromptModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Prompt</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addPromptForm">
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" class="form-control" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Type</label>
                            <select class="form-select" name="type" required>
                                <option value="general">General</option>
                                <option value="coding">Coding</option>
                                <option value="writing">Writing</option>
                                <option value="business">Business</option>
                                <option value="creative">Creative</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Prompt Template</label>
                            <textarea class="form-control" name="template" rows="5" required></textarea>
                            <small class="text-muted">Use {variables} for dynamic content</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Variables (JSON)</label>
                            <textarea class="form-control" name="variables" rows="3" placeholder='{"key": "description"}'></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Status</label>
                            <select class="form-select" name="status" required>
                                <option value="active">Active</option>
                                <option value="inactive">Inactive</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="savePrompt()">Save Prompt</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Prompt Modal -->
    <div class="modal fade" id="editPromptModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Prompt</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editPromptForm">
                        <input type="hidden" name="promptId">
                        <div class="mb-3">
                            <label class="form-label">Title</label>
                            <input type="text" class="form-control" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="3" required></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Type</label>
                            <select class="form-select" name="type" required>
                                <option value="general">General</option>
                                <option value="coding">Coding</option>
                                <option value="writing">Writing</option>
                                <option value="business">Business</option>
                                <option value="creative">Creative</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Prompt Template</label>
                            <textarea class="form-control" name="template" rows="5" required></textarea>
                            <small class="text-muted">Use {variables} for dynamic content</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Variables (JSON)</label>
                            <textarea class="form-control" name="variables" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Status</label>
                            <select class="form-select" name="status" required>
                                <option value="active">Active</option>
                                <option value="inactive">Inactive</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="updatePrompt()">Update Prompt</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Prompt Management Functions
        async function savePrompt() {
            const form = document.getElementById('addPromptForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);

            // Parse variables JSON if present
            if (data.variables) {
                try {
                    data.variables = JSON.parse(data.variables);
                } catch (error) {
                    alert('Invalid JSON in variables field');
                    return;
                }
            }

            try {
                const response = await fetch('/admin/api/prompts', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to create prompt');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to create prompt');
            }
        }

        async function editPrompt(promptId) {
            try {
                const response = await fetch(`/admin/api/prompts/${promptId}`);
                const prompt = await response.json();

                const form = document.getElementById('editPromptForm');
                form.promptId.value = prompt._id;
                form.title.value = prompt.title;
                form.description.value = prompt.description;
                form.type.value = prompt.type;
                form.template.value = prompt.template;
                form.variables.value = JSON.stringify(prompt.variables, null, 2);
                form.status.value = prompt.status;

                new bootstrap.Modal(document.getElementById('editPromptModal')).show();
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to load prompt data');
            }
        }

        async function updatePrompt() {
            const form = document.getElementById('editPromptForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);
            const promptId = data.promptId;
            delete data.promptId;

            // Parse variables JSON if present
            if (data.variables) {
                try {
                    data.variables = JSON.parse(data.variables);
                } catch (error) {
                    alert('Invalid JSON in variables field');
                    return;
                }
            }

            try {
                const response = await fetch(`/admin/api/prompts/${promptId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to update prompt');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to update prompt');
            }
        }

        async function deletePrompt(promptId) {
            if (!confirm('Are you sure you want to delete this prompt?')) {
                return;
            }

            try {
                const response = await fetch(`/admin/api/prompts/${promptId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Failed to delete prompt');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to delete prompt');
            }
        }
    </script>
</body>
</html>
